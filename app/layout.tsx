import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { JobsProvider } from "./contexts/jobs-provider";
import { Job } from "@/lib/definitions";
import { redis } from "@/lib/redis";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const jobs = await getJobs();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <JobsProvider initialJobs={jobs}>{children}</JobsProvider>
      </body>
    </html>
  );
}

const getJobs = async () => {
  const keys = await redis.keys("user1:*");
  const jobs =
    ((await Promise.all(keys.map((key) => redis.json.get(key)))) as Job[]) ||
    [];

  return jobs.sort((a, b) => b.createdAt - a.createdAt);
};
